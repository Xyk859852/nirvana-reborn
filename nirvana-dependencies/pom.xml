<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.phoenix</groupId>
    <artifactId>nirvana-dependencies</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <description>Maven Bom，定义 nirvana-reborn 项目的所有依赖的版本</description>


    <!-- 属性 -->
    <properties>
        <revision>1.1.0</revision>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <resource.delimiter>@</resource.delimiter>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
        <!-- 统一依赖管理 -->
        <spring.boot.version>2.6.8</spring.boot.version>
        <spring.cloud.version>2021.0.1</spring.cloud.version>
        <spring.cloud.alibaba.version>2021.0.1.0</spring.cloud.alibaba.version>
        <!-- RPC 相关 -->
        <dubbo.version>3.0.7</dubbo.version>
        <!-- Web 相关 -->
        <servlet.version>3.1.0</servlet.version>
        <knife4j.version>3.0.3</knife4j.version>
        <swagger.version>1.6.6</swagger.version>
        <!-- Web 相关 -->
        <knife4j.version>3.0.3</knife4j.version>
        <swagger-annotations.version>1.6.6</swagger-annotations.version>
        <!-- DB 相关 -->
        <mysql-connector-java.version>5.1.46</mysql-connector-java.version>
        <druid.version>1.1.16</druid.version>
        <mybatis-spring-boot-starter.version>2.0.0</mybatis-spring-boot-starter.version>
        <mybatis.version>3.5.4</mybatis.version>
        <velocity-engine-core.version>2.3</velocity-engine-core.version>
        <mybatis-plus.version>3.5.3</mybatis-plus.version>
        <mybatis-plus-generator.version>3.5.3</mybatis-plus-generator.version>
        <spring-boot-starter-data-jest.version>3.2.5.RELEASE</spring-boot-starter-data-jest.version>
        <redisson.version>3.17.3</redisson.version>
        <!-- Job 相关 -->
        <xxl-job.version>2.0.1</xxl-job.version>
        <!-- Transaction 相关 -->
        <seata.version>1.1.0</seata.version>
        <!-- 云服务相关 -->
        <qiniu.version>7.2.18</qiniu.version>
        <yunpian-java-sdk.version>1.2.7</yunpian-java-sdk.version>
        <aliyun-java-sdk-core.version>4.1.0</aliyun-java-sdk-core.version>
        <okio.version>3.0.0</okio.version>
        <okhttp3.version>4.10.0</okhttp3.version>
        <minio.version>8.5.1</minio.version>
        <!-- 监控相关 -->
        <skywalking.version>8.7.0</skywalking.version>
        <spring-boot-admin.version>2.6.7</spring-boot-admin.version>
        <opentracing.version>0.31.0</opentracing.version>
        <!-- 工具类相关 -->
        <fastjson.version>1.2.56</fastjson.version>
        <hibernate-validator.version>6.0.16.Final</hibernate-validator.version>
        <hutool.version>5.7.22</hutool.version>
        <guava.version>27.0.1-jre</guava.version>
        <org.projectlombok.version>1.18.20</org.projectlombok.version>
        <logstash.logback>5.3</logstash.logback>
        <org.mapstruct.version>1.4.1.Final</org.mapstruct.version>
        <jjwt.version>0.11.1</jjwt.version>
        <transmittable-thread-local.version>2.12.2</transmittable-thread-local.version>
        <tika-core.version>2.6.0</tika-core.version>
    </properties>

    <!-- 依赖管理 -->
    <dependencyManagement>
        <dependencies>
            <!-- 统一依赖管理 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring.cloud.alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Dubbo -->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-bom</artifactId>
                <version>${dubbo.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--            <dependency>-->
            <!--                <groupId>org.apache.dubbo</groupId>-->
            <!--                <artifactId>dubbo-dependencies-zookeeper</artifactId>-->
            <!--                <version>${dubbo.version}</version>-->
            <!--                <type>pom</type>-->
            <!--            </dependency>-->

            <!-- DB 相关 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatis-plus-generator.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity-engine-core.version}</version>
            </dependency>

            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <dependency>
                <!-- 自动化配置 Spring Data Jest -->
                <groupId>com.github.vanroy</groupId>
                <artifactId>spring-boot-starter-data-jest</artifactId>
                <version>${spring-boot-starter-data-jest.version}</version>
            </dependency>

            <!-- Web 相关 -->
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>mapstruct</artifactId>
                        <groupId>org.mapstruct</groupId> <!-- 避免冲突 -->
                    </exclusion>
                    <exclusion>
                        <artifactId>guava</artifactId>
                        <groupId>com.google.guava</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>swagger-annotations</artifactId>
                        <groupId>io.swagger</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Job 相关 -->
            <dependency>
                <groupId>com.xuxueli</groupId>
                <artifactId>xxl-job-core</artifactId>
                <version>${xxl-job.version}</version>
            </dependency>

            <!-- Transaction 相关 -->
            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-spring-boot-starter</artifactId>
                <version>${seata.version}</version>
            </dependency>

            <!-- 监控相关 -->
            <dependency>
                <groupId>org.apache.skywalking</groupId>
                <artifactId>apm-toolkit-trace</artifactId>
                <version>${skywalking.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.skywalking</groupId>
                <artifactId>apm-toolkit-logback-1.x</artifactId>
                <version>${skywalking.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.skywalking</groupId>
                <artifactId>apm-toolkit-opentracing</artifactId>
                <version>${skywalking.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-api</artifactId>
                <version>${opentracing.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-util</artifactId>
                <version>${opentracing.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-noop</artifactId>
                <version>${opentracing.version}</version>
            </dependency>

            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId> <!-- 实现 Spring Boot Admin Server 服务端 -->
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId> <!-- 实现 Spring Boot Admin Server 服务端 -->
                <version>${spring-boot-admin.version}</version>
            </dependency>

            <!-- Test 相关 -->

            <!--- 日志相关 -->

            <!-- 云服务相关 -->
            <dependency>
                <groupId>com.qiniu</groupId>
                <artifactId>qiniu-java-sdk</artifactId> <!-- 七牛文件服务器 -->
                <version>${qiniu.version}</version>
            </dependency>
            <dependency>
                <groupId>com.yunpian.sdk</groupId>
                <artifactId>yunpian-java-sdk</artifactId> <!-- 云片短信 -->
                <version>${yunpian-java-sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-core</artifactId> <!-- 七牛短信 -->
                <version>${aliyun-java-sdk-core.version}</version>
            </dependency>
            <!--    S3协议        -->
            <dependency>
                <groupId>com.squareup.okio</groupId>
                <artifactId>okio</artifactId>
                <version>${okio.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp3.version}</version>
            </dependency>
            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
            </dependency>

            <!-- 工具类相关 -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId> <!-- use mapstruct-jdk8 for Java 8 or higher -->
                <version>${org.mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId>
                <version>${org.mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${org.projectlombok.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-core</artifactId> <!-- 文件类型的识别 -->
                <version>${tika-core.version}</version>
            </dependency>

            <!--集成logstash-->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash.logback}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>transmittable-thread-local</artifactId> <!-- 解决 ThreadLocal 父子线程的传值问题 -->
                <version>${transmittable-thread-local.version}</version>
            </dependency>
            <!-- Java图形验证码 -->
            <dependency>
                <groupId>com.github.whvcse</groupId>
                <artifactId>easy-captcha</artifactId>
                <version>1.6.2</version>
            </dependency>

            <!-- jwt -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <dependency>
                <!-- hutool 工具类-->
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>

            <!--  nirvana 相关配置组件  -->
            <dependency>
                <groupId>com.phoenix</groupId>
                <artifactId>nirvana-common</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.phoenix</groupId>
                <artifactId>nirvana-spring-boot-starter-web</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.phoenix</groupId>
                <artifactId>nirvana-spring-boot-starter-tenant</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.phoenix</groupId>
                <artifactId>nirvana-spring-boot-starter-file</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.phoenix</groupId>
                <artifactId>nirvana-spring-boot-starter-sentinel</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.phoenix</groupId>
                <artifactId>nirvana-spring-boot-starter-mybatis</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.phoenix</groupId>
                <artifactId>nirvana-spring-boot-starter-security</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.phoenix</groupId>
                <artifactId>nirvana-spring-boot-starter-rpc</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.phoenix</groupId>
                <artifactId>nirvana-spring-boot-starter-cache-redis</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.phoenix</groupId>
                <artifactId>nirvana-spring-boot-starter-error-code</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.phoenix</groupId>
                <artifactId>nirvana-spring-boot-starter-mq</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.phoenix</groupId>
                <artifactId>nirvana-spring-boot-starter-operate-log</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.phoenix</groupId>
                <artifactId>nirvana-module-system-service-api</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.phoenix</groupId>
                <artifactId>mall-product-api</artifactId>
                <version>${revision}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- 提供给 mapstruct 使用 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source> <!-- or higher, depending on your project -->
                        <target>${java.version}</target> <!-- or higher, depending on your project -->
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${org.mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${org.projectlombok.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>

                <!-- 打包 -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <!--                    <configuration>-->
                    <!--                        <fork>true</fork>-->
                    <!--                    </configuration>-->
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>